services:
  db-user-service:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "admin" ]
    volumes:
      - ./database/user-service:/var/lib/postgresql/data
      - ./user-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 3001:5432

  db-events-service:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: events
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGPORT: 5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "admin" ]
    volumes:
      - ./database/events-service:/var/lib/postgresql/data
      - ./events-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 3003:5433

  pgadmin-user-service:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin

  backend-user-service:
    build:
      dockerfile: user-service/Dockerfile
    restart: always
    environment:
      DB_NAME: user
      DB_USER: admin
      DB_PASSWORD: admin
      DB_HOST: db-user-service
      DB_PORT: 5432
      DB_SCHEMA: dev
    ports:
      - 3000:3000
    depends_on:
      db-user-service:
        condition: service_healthy

  backend-events-service:
    build:
      dockerfile: events-service/Dockerfile
    restart: always
    environment:
      DB_NAME: events
      DB_USER: admin
      DB_PASSWORD: admin
      DB_HOST: db-events-service
      DB_PORT: 5433
      DB_SCHEMA: dev
      SERVER_PORT: 3002
    ports:
      - 3002:3002
    depends_on:
      db-events-service:
        condition: service_healthy